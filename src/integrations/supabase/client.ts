
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "http://127.0.0.1:54321";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im14eHR2dHdjb3BsZmFqdmF6cGF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA2MDU2NjgsImV4cCI6MjA2NjE4MTY2OH0.b9sNxeDALujnw2tQD-qnbs3YkZvvTkja8jG6clgpibA";

console.log('=== Supabase Client Configuration ===');
console.log('URL:', SUPABASE_URL);
console.log('Key exists:', !!SUPABASE_PUBLISHABLE_KEY);
console.log('Using local instance:', SUPABASE_URL.includes('127.0.0.1') || SUPABASE_URL.includes('localhost'));

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    storage: localStorage,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': 'lovable-design-analyzer'
    }
  },
  db: {
    schema: 'public'
  }
});

// Add connection monitoring
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Auth state changed:', event, session?.user?.email || 'No user');
});

// Test connection on initialization
supabase
  .from('analyses')
  .select('count')
  .limit(1)
  .then(({ data, error }) => {
    if (error) {
      console.error('Initial connection test failed:', error);
    } else {
      console.log('Initial connection test successful');
    }
  })
  .catch((err) => {
    console.error('Connection test error:', err);
  });
